903ddb33869690b4861a840c078e1590
_getJestObj().mock('uuid', () => ({
  v4: jest.fn()
}));
_getJestObj().mock('../../src/persistence', () => ({
  removeItem: jest.fn(),
  storeItem: jest.fn(),
  getItem: jest.fn()
}));
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
const db = require('../../src/persistence');
const addItem = require('../../src/routes/addItem');
const ITEM = {
  id: 12345
};
const {
  v4: uuid
} = require('uuid');
test('it stores item correctly', async () => {
  const id = 'something-not-a-uuid';
  const name = 'A sample item';
  const req = {
    body: {
      name
    }
  };
  const res = {
    send: jest.fn()
  };
  uuid.mockReturnValue(id);
  await addItem(req, res);
  const expectedItem = {
    id,
    name,
    completed: false
  };
  expect(db.storeItem.mock.calls.length).toBe(1);
  expect(db.storeItem.mock.calls[0][0]).toEqual(expectedItem);
  expect(res.send.mock.calls[0].length).toBe(1);
  expect(res.send.mock.calls[0][0]).toEqual(expectedItem);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ2NCIsImplc3QiLCJmbiIsInJlbW92ZUl0ZW0iLCJzdG9yZUl0ZW0iLCJnZXRJdGVtIiwicmVxdWlyZSIsImRiIiwiYWRkSXRlbSIsIklURU0iLCJpZCIsInV1aWQiLCJ0ZXN0IiwibmFtZSIsInJlcSIsImJvZHkiLCJyZXMiLCJzZW5kIiwibW9ja1JldHVyblZhbHVlIiwiZXhwZWN0ZWRJdGVtIiwiY29tcGxldGVkIiwiZXhwZWN0IiwiY2FsbHMiLCJsZW5ndGgiLCJ0b0JlIiwidG9FcXVhbCJdLCJzb3VyY2VzIjpbImFkZEl0ZW0uc3BlYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkYiA9IHJlcXVpcmUoJy4uLy4uL3NyYy9wZXJzaXN0ZW5jZScpO1xuY29uc3QgYWRkSXRlbSA9IHJlcXVpcmUoJy4uLy4uL3NyYy9yb3V0ZXMvYWRkSXRlbScpO1xuY29uc3QgSVRFTSA9IHsgaWQ6IDEyMzQ1IH07XG5jb25zdCB7djQgOiB1dWlkfSA9IHJlcXVpcmUoJ3V1aWQnKTtcblxuamVzdC5tb2NrKCd1dWlkJywgKCkgPT4gKHsgdjQ6IGplc3QuZm4oKSB9KSk7XG5cbmplc3QubW9jaygnLi4vLi4vc3JjL3BlcnNpc3RlbmNlJywgKCkgPT4gKHtcbiAgICByZW1vdmVJdGVtOiBqZXN0LmZuKCksXG4gICAgc3RvcmVJdGVtOiBqZXN0LmZuKCksXG4gICAgZ2V0SXRlbTogamVzdC5mbigpLFxufSkpO1xuXG50ZXN0KCdpdCBzdG9yZXMgaXRlbSBjb3JyZWN0bHknLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgaWQgPSAnc29tZXRoaW5nLW5vdC1hLXV1aWQnO1xuICAgIGNvbnN0IG5hbWUgPSAnQSBzYW1wbGUgaXRlbSc7XG4gICAgY29uc3QgcmVxID0geyBib2R5OiB7IG5hbWUgfSB9O1xuICAgIGNvbnN0IHJlcyA9IHsgc2VuZDogamVzdC5mbigpIH07XG5cbiAgICB1dWlkLm1vY2tSZXR1cm5WYWx1ZShpZCk7XG5cbiAgICBhd2FpdCBhZGRJdGVtKHJlcSwgcmVzKTtcblxuICAgIGNvbnN0IGV4cGVjdGVkSXRlbSA9IHsgaWQsIG5hbWUsIGNvbXBsZXRlZDogZmFsc2UgfTtcblxuICAgIGV4cGVjdChkYi5zdG9yZUl0ZW0ubW9jay5jYWxscy5sZW5ndGgpLnRvQmUoMSk7XG4gICAgZXhwZWN0KGRiLnN0b3JlSXRlbS5tb2NrLmNhbGxzWzBdWzBdKS50b0VxdWFsKGV4cGVjdGVkSXRlbSk7XG4gICAgZXhwZWN0KHJlcy5zZW5kLm1vY2suY2FsbHNbMF0ubGVuZ3RoKS50b0JlKDEpO1xuICAgIGV4cGVjdChyZXMuc2VuZC5tb2NrLmNhbGxzWzBdWzBdKS50b0VxdWFsKGV4cGVjdGVkSXRlbSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBS0FBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPO0VBQUVDLEVBQUUsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUM7QUFBRSxDQUFDLENBQUMsQ0FBQztBQUU1Q0osV0FBQSxHQUFLQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsT0FBTztFQUN0Q0ksVUFBVSxFQUFFRixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ3JCRSxTQUFTLEVBQUVILElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDcEJHLE9BQU8sRUFBRUosSUFBSSxDQUFDQyxFQUFFLENBQUM7QUFDckIsQ0FBQyxDQUFDLENBQUM7QUFBQyxTQUFBSixZQUFBO0VBQUE7SUFBQUc7RUFBQSxJQUFBSyxPQUFBO0VBQUFSLFdBQUEsR0FBQUEsQ0FBQSxLQUFBRyxJQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBO0FBWEosTUFBTU0sRUFBRSxHQUFHRCxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDM0MsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFDbkQsTUFBTUcsSUFBSSxHQUFHO0VBQUVDLEVBQUUsRUFBRTtBQUFNLENBQUM7QUFDMUIsTUFBTTtFQUFDVixFQUFFLEVBQUdXO0FBQUksQ0FBQyxHQUFHTCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBVW5DTSxJQUFJLENBQUMsMEJBQTBCLEVBQUUsWUFBWTtFQUN6QyxNQUFNRixFQUFFLEdBQUcsc0JBQXNCO0VBQ2pDLE1BQU1HLElBQUksR0FBRyxlQUFlO0VBQzVCLE1BQU1DLEdBQUcsR0FBRztJQUFFQyxJQUFJLEVBQUU7TUFBRUY7SUFBSztFQUFFLENBQUM7RUFDOUIsTUFBTUcsR0FBRyxHQUFHO0lBQUVDLElBQUksRUFBRWhCLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0VBQUUsQ0FBQztFQUUvQlMsSUFBSSxDQUFDTyxlQUFlLENBQUNSLEVBQUUsQ0FBQztFQUV4QixNQUFNRixPQUFPLENBQUNNLEdBQUcsRUFBRUUsR0FBRyxDQUFDO0VBRXZCLE1BQU1HLFlBQVksR0FBRztJQUFFVCxFQUFFO0lBQUVHLElBQUk7SUFBRU8sU0FBUyxFQUFFO0VBQU0sQ0FBQztFQUVuREMsTUFBTSxDQUFDZCxFQUFFLENBQUNILFNBQVMsQ0FBQ0wsSUFBSSxDQUFDdUIsS0FBSyxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUM5Q0gsTUFBTSxDQUFDZCxFQUFFLENBQUNILFNBQVMsQ0FBQ0wsSUFBSSxDQUFDdUIsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUNHLE9BQU8sQ0FBQ04sWUFBWSxDQUFDO0VBQzNERSxNQUFNLENBQUNMLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDbEIsSUFBSSxDQUFDdUIsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUM3Q0gsTUFBTSxDQUFDTCxHQUFHLENBQUNDLElBQUksQ0FBQ2xCLElBQUksQ0FBQ3VCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDRyxPQUFPLENBQUNOLFlBQVksQ0FBQztBQUMzRCxDQUFDLENBQUMifQ==