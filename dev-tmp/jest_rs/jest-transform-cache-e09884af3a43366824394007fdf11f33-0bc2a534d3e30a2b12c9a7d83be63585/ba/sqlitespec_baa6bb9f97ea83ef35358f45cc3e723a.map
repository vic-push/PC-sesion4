{"version":3,"names":["db","require","fs","location","process","env","SQLITE_DB_LOCATION","ITEM","id","name","completed","beforeEach","existsSync","unlinkSync","test","init","storeItem","items","getItems","expect","length","toBe","toEqual","initialItems","updateItem","Object","assign","removeItem","item","getItem"],"sources":["sqlite.spec.js"],"sourcesContent":["const db = require('../../src/persistence/sqlite');\nconst fs = require('fs');\nconst location = process.env.SQLITE_DB_LOCATION || '/tmp/todo.db';\n\nconst ITEM = {\n    id: '7aef3d7c-d301-4846-8358-2a91ec9d6be3',\n    name: 'Test',\n    completed: false,\n};\n\nbeforeEach(() => {\n    if (fs.existsSync(location)) {\n        fs.unlinkSync(location);\n    }\n});\n\ntest('it initializes correctly', async () => {\n    await db.init();\n});\n\ntest('it can store and retrieve items', async () => {\n    await db.init();\n\n    await db.storeItem(ITEM);\n\n    const items = await db.getItems();\n    expect(items.length).toBe(1);\n    expect(items[0]).toEqual(ITEM);\n});\n\ntest('it can update an existing item', async () => {\n    await db.init();\n\n    const initialItems = await db.getItems();\n    expect(initialItems.length).toBe(0);\n\n    await db.storeItem(ITEM);\n\n    await db.updateItem(\n        ITEM.id,\n        Object.assign({}, ITEM, { completed: !ITEM.completed }),\n    );\n\n    const items = await db.getItems();\n    expect(items.length).toBe(1);\n    expect(items[0].completed).toBe(!ITEM.completed);\n});\n\ntest('it can remove an existing item', async () => {\n    await db.init();\n    await db.storeItem(ITEM);\n\n    await db.removeItem(ITEM.id);\n\n    const items = await db.getItems();\n    expect(items.length).toBe(0);\n});\n\ntest('it can get a single item', async () => {\n    await db.init();\n    await db.storeItem(ITEM);\n\n    const item = await db.getItem(ITEM.id);\n    expect(item).toEqual(ITEM);\n});\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AAClD,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,cAAc;AAEjE,MAAMC,IAAI,GAAG;EACTC,EAAE,EAAE,sCAAsC;EAC1CC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE;AACf,CAAC;AAEDC,UAAU,CAAC,MAAM;EACb,IAAIT,EAAE,CAACU,UAAU,CAACT,QAAQ,CAAC,EAAE;IACzBD,EAAE,CAACW,UAAU,CAACV,QAAQ,CAAC;EAC3B;AACJ,CAAC,CAAC;AAEFW,IAAI,CAAC,0BAA0B,EAAE,YAAY;EACzC,MAAMd,EAAE,CAACe,IAAI,CAAC,CAAC;AACnB,CAAC,CAAC;AAEFD,IAAI,CAAC,iCAAiC,EAAE,YAAY;EAChD,MAAMd,EAAE,CAACe,IAAI,CAAC,CAAC;EAEf,MAAMf,EAAE,CAACgB,SAAS,CAACT,IAAI,CAAC;EAExB,MAAMU,KAAK,GAAG,MAAMjB,EAAE,CAACkB,QAAQ,CAAC,CAAC;EACjCC,MAAM,CAACF,KAAK,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5BF,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAACK,OAAO,CAACf,IAAI,CAAC;AAClC,CAAC,CAAC;AAEFO,IAAI,CAAC,gCAAgC,EAAE,YAAY;EAC/C,MAAMd,EAAE,CAACe,IAAI,CAAC,CAAC;EAEf,MAAMQ,YAAY,GAAG,MAAMvB,EAAE,CAACkB,QAAQ,CAAC,CAAC;EACxCC,MAAM,CAACI,YAAY,CAACH,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEnC,MAAMrB,EAAE,CAACgB,SAAS,CAACT,IAAI,CAAC;EAExB,MAAMP,EAAE,CAACwB,UAAU,CACfjB,IAAI,CAACC,EAAE,EACPiB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEnB,IAAI,EAAE;IAAEG,SAAS,EAAE,CAACH,IAAI,CAACG;EAAU,CAAC,CAC1D,CAAC;EAED,MAAMO,KAAK,GAAG,MAAMjB,EAAE,CAACkB,QAAQ,CAAC,CAAC;EACjCC,MAAM,CAACF,KAAK,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5BF,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAACP,SAAS,CAAC,CAACW,IAAI,CAAC,CAACd,IAAI,CAACG,SAAS,CAAC;AACpD,CAAC,CAAC;AAEFI,IAAI,CAAC,gCAAgC,EAAE,YAAY;EAC/C,MAAMd,EAAE,CAACe,IAAI,CAAC,CAAC;EACf,MAAMf,EAAE,CAACgB,SAAS,CAACT,IAAI,CAAC;EAExB,MAAMP,EAAE,CAAC2B,UAAU,CAACpB,IAAI,CAACC,EAAE,CAAC;EAE5B,MAAMS,KAAK,GAAG,MAAMjB,EAAE,CAACkB,QAAQ,CAAC,CAAC;EACjCC,MAAM,CAACF,KAAK,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC;AAEFP,IAAI,CAAC,0BAA0B,EAAE,YAAY;EACzC,MAAMd,EAAE,CAACe,IAAI,CAAC,CAAC;EACf,MAAMf,EAAE,CAACgB,SAAS,CAACT,IAAI,CAAC;EAExB,MAAMqB,IAAI,GAAG,MAAM5B,EAAE,CAAC6B,OAAO,CAACtB,IAAI,CAACC,EAAE,CAAC;EACtCW,MAAM,CAACS,IAAI,CAAC,CAACN,OAAO,CAACf,IAAI,CAAC;AAC9B,CAAC,CAAC"}